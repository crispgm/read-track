<div id="app" class="section">
  <h2 id="Bookmarklet">Bookmarklet</h2>
  <blockquote>
    You may add the following bookmarklet to your browser. Chrome, Brave, and Safari are
    tested.
  </blockquote>
  <div clas="input-area">
    {% raw %}
    <div class="input-item">
      <div class="input-title">Read Type</div>
      <select id="read-type" v-model="readType">
        <option value="read">Read</option>
        <option value="skim">Skim</option>
        <option value="skip">Skip</option>
        <option value="unread">Unread</option>
      </select>
    </div>
    <div class="input-item">
      <div class="input-title">Device</div>
      <input type="text" id="device-name" v-model="deviceName" />
    </div>
    <div class="input-item">
      <div class="input-title">HTTPS</div>
      <input type="checkbox" checked v-model="isHTTPS" />
    </div>
    <p>
      <button @click="onClickCopy">Copy to Clipboard</button>
      <span id="copy-result">{{ copyResult }}</span>
    </p>
  </div>
  <pre class="highlight bookmarklet">
    <code class="hljs" id="bookmarklet">javascript:(() => {
  const token = "{{ token }}";
  const readType = "{{ readType }}";
  const deviceName = "{{ deviceName }}";
  const requestURL = "{{ isHTTPS ? 'https://' : 'http://' }}{{ hostname }}/api/add";

  const pageTitle = document.title;
  const pageURL = window.location.href;
  let metaAuthor = "";
  let metaDescription = "";

  function getMetaValue(propName) {
    const x = document.getElementsByTagName("meta");
    for (let i = 0; i < x.length; i++) {
      const y = x[i];
      let metaName;
      if (y.attributes.property !== undefined) {
        metaName = y.attributes.property.value;
      }
      if (y.attributes.name !== undefined) {
        metaName = y.attributes.name.value;
      }
      if (metaName === undefined) {
        continue;
      }
      if (metaName === propName) {
        return y.attributes.content.value;
      }
    }
    return undefined;
  }
  {
    const author = getMetaValue("author");
    if (author !== undefined) {
      metaAuthor = author;
    }
  }
  {
    let desc = getMetaValue("og:description");
    if (desc !== undefined) {
      metaDescription = desc;
    } else {
      desc = getMetaValue("description");
      if (desc !== undefined) {
        metaDescription = desc;
      }
    }
  }

  const url = new URL(requestURL);
  const searchParams = url.searchParams;
  searchParams.set("title", pageTitle);
  searchParams.set("url", pageURL);
  searchParams.set("author", metaAuthor);
  searchParams.set("description", metaDescription);
  searchParams.set("type", readType);
  searchParams.set("device", deviceName);
  searchParams.set("token", token);
  window.location.href = url;
})();</code>
  </pre>
  {% endraw %}
</div>
<div class="section">
  <h2 id="iOS">iOS</h2>
  <ol>
    <li>
      <a
        href="https://www.icloud.com/shortcuts/c3f9ca3719a8443ca512b10b11b4b875"
        target="_blank"
      >
        Download the template of ReadTrack shortcut </a
      >.
    </li>
    <li>
      Clone the shortcut and use as your private one, because it needs private
      access token.
    </li>
    <li>
      Setup <code>token</code>, <code>hostname</code> and
      <code>deviceName</code>.
    </li>
  </ol>
</div>
<div class="section">
  <h2 id="Android">Android</h2>
  <p>
    It is not supported yet because I don't really have an Android device. If
    you want to use Read Track on Android, please feel free to contribute.
  </p>
</div>
<script>
  const {createApp} = Vue;

  createApp({
    data() {
      return {
        token: '{{ token }}',
        hostname: '{{ hostname }}',
        readType: 'read',
        deviceName: '',
        isHTTPS: true,
        bookmarklet: 'loading...',
        copyResult: '',
      };
    },
    mounted() {
      this.bookmarklet = document.querySelector('#bookmarklet').textContent;
      hljs.highlightAll();
    },
    updated() {
      this.bookmarklet = document.querySelector('#bookmarklet').textContent;
      hljs.highlightAll();
    },
    methods: {
      onClickCopy() {
        navigator.clipboard.writeText(this.bookmarklet);
        this.copyResult =
          'Copied to clipboard. You may paste it to your bookmarklet.';
        setTimeout(() => {
          this.copyResult = '';
        }, '2500');
      },
    },
  }).mount('#app');
</script>
